#!/bin/bash
#
# Copyright (C) 1994-2021 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of both the OpenPBS software ("OpenPBS")
# and the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# OpenPBS is free software. You can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# OpenPBS is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# PBS Pro is commercially licensed software that shares a common core with
# the OpenPBS software.  For a copy of the commercial license terms and
# conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
# Altair Legal Department.
#
# Altair's dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of OpenPBS and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair's trademarks, including but not limited to "PBS™",
# "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
# subject to Altair's trademark licensing policies.


ptllibpath=
ptlbinpath=
ptl_prefix_lib=

# Try package install paths
if [ -f /etc/debian_version ]; then
    __ptlpkgname=$(dpkg-query -W -f='${binary:Package}\n' 2>/dev/null | grep -E '*-ptl$')
    if [ "x${__ptlpkgname}" != "x" ]; then
        ptl_prefix_lib=$(dpkg -L ${__ptlpkgname} 2>/dev/null | grep -m 1 lib$ 2>/dev/null)
    fi
else
    __ptlpkgname=$(rpm -qa 2>/dev/null | grep -E '*-ptl-[[:digit:]]')
    if [ "x${__ptlpkgname}" != "x" ]; then
        ptl_prefix_lib=$(rpm -ql ${__ptlpkgname} 2>/dev/null | grep -m 1 lib$ 2>/dev/null)
    fi
fi

# Try system paths
if [ "x${ptl_prefix_lib}" != "x" ]; then
    if [ ! -d ${ptl_prefix_lib} ]; then
        ptl_prefix_lib=/usr/local/lib/python3.[[:digit:]]/site-packages
        if [ ! -d ${ptl_prefix_lib} ]; then
            ptl_prefix_lib=/usr/lib/python3.[[:digit:]]/site-packages
        fi
    fi
fi

conf="${PBS_CONF_FILE:-/etc/pbs.conf}"
if [ -r "${conf}" ]; then
    # we only need PBS_EXEC from pbs.conf
    __PBS_EXEC=$( grep '^[[:space:]]*PBS_EXEC=' "$conf" | tail -1 | sed 's/^[[:space:]]*PBS_EXEC=\([^[:space:]]*\)[[:space:]]*/\1/' )
else
    echo "Error: Unable to read PBS conf file" >&2
    exit 1
fi
unset conf

__pbs_snapshot=pbs_snapshot

if [ "x${ptl_prefix_lib}" != "x" ]; then
    python_dir=$(/bin/ls -1 ${ptl_prefix_lib})
    prefix=$(dirname ${ptl_prefix_lib})

    ptllibpath=${prefix}/lib/${python_dir}/site-packages
    ptlbinpath=${prefix}/bin
else
    if [ "X${__PBS_EXEC}" != "X" ]; then
        # Define PATH and PYTHONPATH for the users
        PTL_PREFIX=$(dirname ${__PBS_EXEC})/ptl
        if [ ! -d "${PTL_PREFIX}/lib/site-packages" ]; then
            ptlbinpath=${__PBS_EXEC}/unsupported/fw/bin
            ptllibpath=${__PBS_EXEC}/unsupported/fw
            __pbs_snapshot=${__pbs_snapshot}.py
        else
            python_dir=$(/bin/ls -1 ${PTL_PREFIX}/lib)/site-packages
            ptllibpath=${PTL_PREFIX}/lib/${python_dir}
            ptlbinpath=${PTL_PREFIX}/bin
        fi
       unset PTL_PREFIX
       unset python_dir
    fi
fi

export PYTHONPATH=${ptllibpath}:${PYTHONPATH}

if [ -d $ptlbinpath ] && [ -d $ptllibpath ];then
    if [ -x "${__PBS_EXEC}/python/bin/python" ]; then
        ${__PBS_EXEC}/python/bin/python ${ptlbinpath}/${__pbs_snapshot} "${@}"
    else
        python3 ${ptlbinpath}/${__pbs_snapshot} "${@}"
    fi
else
    echo "***" >&2
    echo "*** Ptllib/Ptlbin Path Not found" >&2
    echo "***" >&2
    exit 1
fi

unset __PBS_EXEC
unset __pbs_snapshot
