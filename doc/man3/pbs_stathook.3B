.\"
.\" Copyright (C) 1994-2021 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of both the OpenPBS software ("OpenPBS")
.\" and the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" OpenPBS is free software. You can redistribute it and/or modify it under
.\" the terms of the GNU Affero General Public License as published by the
.\" Free Software Foundation, either version 3 of the License, or (at your
.\" option) any later version.
.\"
.\" OpenPBS is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
.\" License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" PBS Pro is commercially licensed software that shares a common core with
.\" the OpenPBS software.  For a copy of the commercial license terms and
.\" conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
.\" Altair Legal Department.
.\"
.\" Altair's dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of OpenPBS and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair's trademarks, including but not limited to "PBS™",
.\" "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
.\" subject to Altair's trademark licensing policies.
.\"
.TH pbs_stathook 3B "19 July 2020" Local "PBS Professional"
.SH NAME
.B pbs_stathook 
- get status information about PBS site hooks
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.nf
.B struct batch_status 
.B *pbs_stathook(int connect, char *hook_id, struct attrl *output_attribs, 
.B \ \ \ \ \ \ \ \ \ \ \ \ \ \ char *extend)
.sp
.B void pbs_statfree(struct batch_status *psj)
.fi
.SH DESCRIPTION
Issues a batch request to get the status of a specified site hook
or a set of site hooks at the current server.

Generates a 
.I Status Hook 
batch request and sends it to the server over the connection specified
by connect.

.B Required Privilege
.br
This API can be executed only by root on the local server host.

.SH ARGUMENTS
.IP connect 8
Return value of 
.B pbs_connect().  
Specifies connection handle over which to send batch request to server.

.IP hook_id 8
Hook name, null string, or null pointer.  
.br
If 
.I hook_id 
specifies a name, the attribute-value list for that hook is returned.  
.br
If 
.I hook_id 
is a null string or a null pointer, the status of all hooks
at the current server is returned.

.IP output_attribs 8
Pointer to a list of attributes to return.  If this list is null, all
attributes are returned.  Each attribute is described in an 
.I attrl
structure, defined in pbs_ifl.h as:
.nf
struct attrl {
        char         *name;
        char         *resource;
        char         *value;
        struct attrl *next;
};
.fi
.IP extend 8
Character string where you can specify limits or extensions of your selection.
.LP

.B Members of attrl Structure
.br
.IP name 8
Points to a string containing the name of the attribute.  

.IP resource 8
Points to a string containing the name of a resource.  Used only when
the specified attribute contains resource information.  Otherwise, 
.I resource 
should be a null pointer.

.IP value 8
Should always be a pointer to a null string.

.IP next 8
Points to next attribute in list.  A null pointer terminates the list.

.SH RETURN VALUE
Returns a pointer to a list of 
.I batch_status 
structures for for the specified site hook.  If no site hook can be
queried for status, returns the null pointer.

If an error occurred, the routine returns a null pointer, and the
error number is available in the global integer 
.I pbs_errno.

.B The batch_status Structure
.br
The 
.I batch_status 
structure is defined in pbs_ifl.h as
.nf
struct batch_status {
        struct batch_status *next;
        char                *name;
        struct attrl        *attribs;
        char                *text;
}
.fi

.SH CLEANUP
You must free the list of 
.I batch_status 
structures when no longer needed, by calling 
.B pbs_statfree().

.SH SEE ALSO
pbs_hook_attributes(7B), 
pbs_connect(3B), pbs_statfree(3B)
