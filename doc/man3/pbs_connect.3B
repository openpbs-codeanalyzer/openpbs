.\"
.\" Copyright (C) 1994-2021 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of both the OpenPBS software ("OpenPBS")
.\" and the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" OpenPBS is free software. You can redistribute it and/or modify it under
.\" the terms of the GNU Affero General Public License as published by the
.\" Free Software Foundation, either version 3 of the License, or (at your
.\" option) any later version.
.\"
.\" OpenPBS is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
.\" License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" PBS Pro is commercially licensed software that shares a common core with
.\" the OpenPBS software.  For a copy of the commercial license terms and
.\" conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
.\" Altair Legal Department.
.\"
.\" Altair's dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of OpenPBS and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair's trademarks, including but not limited to "PBS™",
.\" "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
.\" subject to Altair's trademark licensing policies.
.\"
.TH pbs_connect 3B "15 November 2019" Local "PBS Professional"
.SH NAME
.B pbs_connect 
\- return a connection handle from a PBS batch server

.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.B int pbs_connect(char *server) 

.SH DESCRIPTION
This function establishes a virtual stream (TCP/IP) connection with
the specified batch server.

Returns a connection handle.

.B pbs_connect() 
determines whether or not the complex has a failover server
configured.  It also determines which server is the primary and which
is the secondary.

.SH ARGUMENTS
.IP server 8
Specifies name of server to connect to.  Format:
.br
.I <hostname>[:<port>]

If you do not specify a port, PBS uses the default.

If 
.I server 
is a null pointer or a null string, this function opens a
connection to the default server.  The default server is specified in
the PBS_DEFAULT environment variable or the PBS_SERVER parameter in
/etc/pbs.conf.

.SH USAGE
Use this function to establish a connection handle to the desired
server before calling any of the other pbs_* API functions.  They
will send their batch requests over the connection established by this
function.  You can send multiple requests over one connection.

.SH CLEANUP
After you are done using the connection handle, close the connection
via a call to 
.B pbs_disconnect().

.SH SIDE EFFECTS

The global variable 
.I pbs_server 
is declared in pbs_ifl.h.  This
variable is set on return to point to the server name to which
.B pbs_connect() 
connected or attempted to connect.

.SH Windows Requirement

In order to use 
.B pbs_connect() 
with Windows, initialize the network
library and link with winsock2.  To do this, call winsock_init()
before calling 
.B pbs_connect(), 
and link against the ws2_32.lib library.

.SH RETURN VAlUE
On success, the routine returns a connection handle which is a
non-negative integer.

If an error occurred, the routine returns -1, and the error number is
available in the global integer 
.I pbs_errno.

.SH SEE ALSO
pbs_disconnect(3B)


