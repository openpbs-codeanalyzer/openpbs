.\"
.\" Copyright (C) 1994-2021 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of both the OpenPBS software ("OpenPBS")
.\" and the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" OpenPBS is free software. You can redistribute it and/or modify it under
.\" the terms of the GNU Affero General Public License as published by the
.\" Free Software Foundation, either version 3 of the License, or (at your
.\" option) any later version.
.\"
.\" OpenPBS is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
.\" License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" PBS Pro is commercially licensed software that shares a common core with
.\" the OpenPBS software.  For a copy of the commercial license terms and
.\" conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
.\" Altair Legal Department.
.\"
.\" Altair's dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of OpenPBS and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair's trademarks, including but not limited to "PBS™",
.\" "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
.\" subject to Altair's trademark licensing policies.
.\"
.TH pbs_confirmresv 3B "15 November 2019" Local "PBS Professional"
.SH NAME
.B pbs_confirmresv 
\- confirm a PBS reservation 
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.nf
.B int pbs_confirmresv(int connect, char *reservationID, char *location,
.B \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ char *extend)
.fi

.SH DESCRIPTION
Issues a batch request to confirm a PBS advance, standing, or maintenance reservation.

This function generates a 
.I Confirm Reservation 
(75) batch request and sends it to the server over the connection specified by 
.I connect.

.SH ARGUMENTS
.IP connect 8
Return value of 
.B pbs_connect().  
Specifies connection over which to send batch request to server.

.IP reservationID 8
Reservation to be confirmed.  
.br
Format for advance reservation:
.br
.I R<sequence number>.<server name>
.br
Format for standing reservation:
.br
.I S<sequence number>.<server name>
.br
Format for maintenance reservation:
.br
.I M<sequence number>.<server name>

.IP location 8
String describing vnodes and resources to be used for reservation.  
Format:
.br
.I (<vchunk>)[+(<vchunk>) ...]
.br
where 
.I vchunk 
has the format
.br
.nf
.I <vnode name>:<vnode resources>[+<vnode name>:<vnode 
.br
.I resources> ...]
.fi
.br
and where
.I vnode resources
has the format
.br
.I <resource name>=<value>[:<resource name>=<value> ...]

Example:
.nf
-H (VnodeA:mem=100kb:ncpus=1)+ 
.br 
     (VnodeB:mem=100kb:ncpus=2+ VnodeC:mem=100kb)
.fi
.LP

.IP start_time 8
Unsigned long containing start time in seconds since epoch.  Used only
for ASAP reservations (reservations created by using
.I pbs_ralter -W qmove=<jobID> 
on an existing job).  

.IP extend 8
Character string for specifying confirmation/non-confirmation action:
.RS 11
To confirm a normal reservation, pass in PBS_RESV_CONFIRM_SUCCESS.
.br
To have an unconfirmed reservation deleted, pass in PBS_RESV_CONFIRM_FAIL.
.br
To have the scheduler set the time when it will try to reconfirm a
degraded reservation, pass in PBS_RESV_CONFIRM_FAIL.
.RE

.SH RETURN VALUE
The routine returns 0 (zero) on success.

On error, the routine returns a non-zero exit value, and the error
number is available in the global integer 
.I pbs_errno.

.SH SEE ALSO
pbs_rdel(1B), pbs_connect(3B)

