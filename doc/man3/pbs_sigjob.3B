.\"
.\" Copyright (C) 1994-2021 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of both the OpenPBS software ("OpenPBS")
.\" and the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" OpenPBS is free software. You can redistribute it and/or modify it under
.\" the terms of the GNU Affero General Public License as published by the
.\" Free Software Foundation, either version 3 of the License, or (at your
.\" option) any later version.
.\"
.\" OpenPBS is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
.\" License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" PBS Pro is commercially licensed software that shares a common core with
.\" the OpenPBS software.  For a copy of the commercial license terms and
.\" conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
.\" Altair Legal Department.
.\"
.\" Altair's dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of OpenPBS and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair's trademarks, including but not limited to "PBS™",
.\" "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
.\" subject to Altair's trademark licensing policies.
.\"
.TH pbs_sigjob 3B "15 November 2019" Local "PBS Professional"
.SH NAME
.B pbs_sigjob 
\- send a signal to a PBS batch job
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.B int pbs_sigjob(int connect, char *jobID, char *signal, char *extend)

.SH DESCRIPTION
Issues a batch request to send a signal to a batch job.

Generates a 
.I Signal Job 
(18) batch request and sends it to the server over the connection specified by 
.I connect.

You can send a signal to a job, job array, subjob, or range of subjobs.

The batch server sends the job the specified signal.

The job must be in the 
.I running 
or 
.I suspended 
state.

.SH ARGUMENTS
.IP connect 8
Return value of 
.B pbs_connect().  
Specifies connection handle over which to send batch request to server.

.IP jobID *
ID of job to be signaled.  
.br
Format for a job:
.br
.I <sequence number>.<server name>
.br
Format for a job array:
.br
.I <sequence number>[].<server name>
.br
Format for a subjob:
.br
.I <sequence number>[<index>].<server name>
.br
Format for a range of subjobs:
.br
.I <sequence number>[<index start>-<index end>].<server name>

.IP signal 8
Name of signal to send to job.  Can be alphabetic, with or without 
.I SIG
prefix.  Can be signal number.

The following special signals are all lower-case, and have no associated signal number:
.RS 8
.IP admin-suspend 6
Suspends a job and puts its vnodes into the 
.I maintenance 
state.  The job is put into the 
.I S 
state and its processes are suspended.

.IP admin-resume 6
Resumes a job that was suspended using the 
.I admin-suspend 
signal, without waiting for scheduler.  Cannot be used on jobs that were
suspended with the 
.I suspend 
signal.  When the last 
.I admin-suspend
ed job has been 
.I admin-resume
d, the vnode leaves the maintenance state.

.IP suspend 6
Suspends specified job(s).  Job goes into 
.I suspended (S) 
state.

.IP resume 6
Marks specified job(s) for resumption by scheduler when there are
sufficient resources.  Cannot be used on jobs that were suspended
with the 
.I admin_suspend 
signal.  
.LP
If the signal is not recognized on the execution host, no signal is
sent and an error is returned.
.RE

.IP extend 8
Character string for extensions to command.  Not currently used.

.SH RETURN VALUE
The routine returns 0 (zero) on success.

If an error occurred, the routine returns a non-zero exit value, and
the error number is available in the global integer 
.I pbs_errno.

.SH SEE ALSO
qsig(1B), pbs_connect(3B)
