.\"
.\" Copyright (C) 1994-2021 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of both the OpenPBS software ("OpenPBS")
.\" and the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" OpenPBS is free software. You can redistribute it and/or modify it under
.\" the terms of the GNU Affero General Public License as published by the
.\" Free Software Foundation, either version 3 of the License, or (at your
.\" option) any later version.
.\"
.\" OpenPBS is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
.\" License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" PBS Pro is commercially licensed software that shares a common core with
.\" the OpenPBS software.  For a copy of the commercial license terms and
.\" conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
.\" Altair Legal Department.
.\"
.\" Altair's dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of OpenPBS and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair's trademarks, including but not limited to "PBS™",
.\" "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
.\" subject to Altair's trademark licensing policies.
.\"
.TH pbs_submit_resv 3B "15 November 2019" Local "PBS Professional"
.SH NAME
.B pbs_submit_resv 
\- submit a PBS reservation
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.nf
.B char *pbs_submit_resv(int connect, struct attropl *attrib_list, 
.B \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ char *extend)
.fi

.SH DESCRIPTION
Issues a batch request to submit a new reservation.

Generates a 
.I Submit Reservation 
(70) batch request and sends it to the server over the connection specified by 
.I connect.

Returns a pointer to the reservation ID. 

.SH ARGUMENTS
.IP connect 8
Return value of 
.B pbs_connect().  
Specifies connection over which to send batch request to server.

.IP attrib_list 8
Pointer to a list of attributes to set, with values.  Each attribute
is described in an 
.I attropl 
structure, defined in pbs_ifl.h as:
.nf
struct attropl {
        struct attropl *next;
        char           *name;
        char           *resource;
        char           *value;
        enum batch_op  op;
};
.fi

For any attribute that is not specified or that is a null pointer, PBS
takes the default action for that attribute.  The default action is
to assign the default value or to not pass the attribute with the
reservation; the action depends on the attribute.

.IP extend 8
Character string for extensions to command.  Not currently used.
.LP

.B Members of attropl Structure
.IP next 8
Points to next attribute in list.  A null pointer terminates the list.

.IP name 8
Points to a string containing the name of the attribute.  

.IP resource 8
Points to a string containing the name of a resource.  Used only when
the specified attribute contains resource information.  Otherwise,
.I resource 
should be a null pointer.

.IP value 8
Points to a string containing the value of the attribute or resource.  

.IP op 8
Operator.  The only allowed operator for this function is 
.I SET.

.SH RETURN VALUE

Returns a pointer to a character string containing the reservation ID
assigned by the server.

If an error occurred, the routine returns a null pointer, and the
error number is available in the global integer 
.I pbs_errno.

.SH CLEANUP

The space for the reservation ID returned by 
.B pbs_submit_resv() 
is allocated by 
.B pbs_submit_resv().  
Free it via a call to 
.B free() 
when you no longer need it.

.SH SEE ALSO
pbs_rsub(1B), pbs_connect(3B)
